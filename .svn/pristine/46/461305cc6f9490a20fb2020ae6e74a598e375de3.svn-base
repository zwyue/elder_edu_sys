package com.zrtjoa.controller.archive;

import com.zrtjoa.common.TimeUtil;
import com.zrtjoa.controller.UserController;
import com.zrtjoa.entity.Award;
import com.zrtjoa.service.AwardServie;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.*;

/**
 * @Author: yangli
 * @Description:
 * @Date: Created in 14:18 2018/11/28
 * @Modified by:
 */
@Controller
@RequestMapping("/award")
public class AwardController {

    private static final Logger logger = LoggerFactory.getLogger(AwardController.class);

    @Autowired
    private AwardServie awardServie;

    /**
     * 获奖情况列表
     * @author yangli
     * @date 2018/11/28 14:10
     */
    @RequestMapping(value = "list" ,method = RequestMethod.GET)
    public String getList(Model model){
        List<Award> list = awardServie.getList();
        model.addAttribute("list",list);
        return "archives/award/award_list";
    }

    /**
     * 获奖情况新增页面
     * @author yangli
     * @date 2018/11/28 14:10
     */
    @RequestMapping(value = "addAward" ,method = RequestMethod.GET)
    public String addAward(){
        return "archives/award/award_add";
    }

    /**
     * 获奖情况新增保存
     * @author yangli
     * @date 2018/11/28 14:10
     */
    @RequestMapping(value = "save" ,method = RequestMethod.POST)
    @ResponseBody
    public String save(Award award){
        award.setUserid(1);
        award.setUsername("username");
        awardServie.insert(award);
        /*if(awardServie.insert(award)>0){
            return ResultUtils.success("保存成功");
        }else{
            return ResultUtils.error("保存失败");
        }*/
        return "{ \"msg\":\"success\"}";
    }

    /**
     * 获奖情况修改
     * @author yangli
     * @date 2018/11/28 14:10
     */
    @RequestMapping(value = "update" ,method = RequestMethod.POST)
    @ResponseBody
    public String update(Award award){
        award.setUserid(1);
        award.setUsername("username");
        award.setCrttime(TimeUtil.dateToStrLong(new Date()));
        awardServie.updateByPrimaryKey(award);
        return "{ \"msg\":\"success\"}";
    }

    /**
     * 获奖情况查询
     * @author yangli
     * @date 2018/11/28 14:10
     */
    @RequestMapping(value = "query" ,method = RequestMethod.GET)
    public String query(Integer id,Model model){
        Award award=awardServie.selectByPrimaryKey(id);
        model.addAttribute("award",award);
        return "archives/award/award_update";
    }

    /**
     * 获奖情况删除
     * @author yangli
     * @date 2018/11/28 14:10
     */
    @RequestMapping(value = "delete" ,method = RequestMethod.GET)
    public String delete(Integer id){
        awardServie.deleteByPrimaryKey(id);
        return "redirect:/award/list";
    }
}
