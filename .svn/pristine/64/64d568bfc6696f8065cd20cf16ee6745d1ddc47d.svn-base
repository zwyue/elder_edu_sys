package com.zrtjoa.service.impl;

import com.zrtjoa.constant.SysConstant;
import com.zrtjoa.dao.TermDao;
import com.zrtjoa.entity.Term;
import com.zrtjoa.service.TermService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.Assert;

import java.time.LocalDate;

import static com.zrtjoa.common.TimeUtil.compareDate;

/**
 * TermServiceImpl class
 *
 * @author zwy
 * @date 2018/11/29 14:48
 */
@Service
public class TermServiceImpl implements TermService {

    @Autowired
    private TermDao termDao ;

    /**
     * 新建学期，复制学期
     *
     * @author zwy
     * @date 2018/11/29 16:08
     */
    @Override
    public Integer createNewTerm(Term term) {

        String startTime = term.getStarttime();
        String endTime = term.getEndtime() ;

        //时间判断
        Assert.notNull(startTime,"开始日期不能为空");
        Assert.notNull(endTime,"结束日期不能为空");

        Assert.isTrue(compareDate(endTime,startTime),"结束日期应大于开始日期");

        //查询上学期
        Term lastTerm = termDao.selectLastTerm();

        if (lastTerm==null){
            //如果当前没有学期，则新建学期应大于当前日期
            Assert.isTrue(compareDate(startTime, LocalDate.now().toString()),"开始日期应大于当前日期");

        }else {

            Assert.isTrue(compareDate(startTime,lastTerm.getEndtime()),"开始日期应大于上学期结束时间");
        }
        //初始化学期为不可用状态
        term.setIsenable(SysConstant.IsEnable.DISABLED);
        return termDao.insert(term);
    }

    @Override
    public Integer disableTerm() {
        return termDao.disableTerm();
    }

    @Override
    public Integer enableTerm() {
        return termDao.enableTerm();
    }
}
