<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zrtjoa.dao.RosterDao">
  <resultMap id="BaseResultMap" type="com.zrtjoa.entity.Roster">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="birthdate" jdbcType="TIMESTAMP" property="birthdate" />
    <result column="stunumber" jdbcType="VARCHAR" property="stunumber" />
    <result column="classid" jdbcType="INTEGER" property="classid" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
    <result column="stuid" jdbcType="INTEGER" property="stuid" />
    <result column="stuname" jdbcType="VARCHAR" property="stuname" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="isleader" jdbcType="VARCHAR" property="isleader" />
    <result column="crttime" jdbcType="TIMESTAMP" property="crttime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="termid" jdbcType="INTEGER" property="termid" />
    <result column="termname" jdbcType="VARCHAR" property="termname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="famPhone" jdbcType="VARCHAR" property="famPhone" />
  </resultMap>
  <sql id="Base_Column_List">
    id, stunumber, classid, classname, stuid, stuname, age, isleader, status, termid, termname,phone,famPhone,
    DATE_FORMAT(birthdate,'%Y-%m-%d') birthdate,
    DATE_FORMAT(crttime,'%Y-%m-%d %H:%i:%S') crttime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roster
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from roster
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!-- 插入花名册信息 -->
  <insert id="insert" parameterType="com.zrtjoa.entity.Roster">
    insert into roster (birthdate, stunumber, classid,classname,
                        stuid, stuname, age, crttime, termid, termname ,phone,famPhone)
    values (#{birthdate}, #{stunumber},#{classid},#{classname}, #{stuid},
            #{stuname}, #{age}, now(),#{termid},#{termname},#{phone},#{famPhone})
  </insert>

  <insert id="insertSelective" parameterType="com.zrtjoa.entity.Roster">
    insert into roster
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="birthdate != null">
        birthdate,
      </if>
      <if test="stunumber != null">
        stunumber,
      </if>
      <if test="classid != null">
        classid,
      </if>
      <if test="classname != null">
        classname,
      </if>
      <if test="stuid != null">
        stuid,
      </if>
      <if test="stuname != null">
        stuname,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="isleader != null">
        isleader,
      </if>
      <if test="crttime != null">
        crttime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="termid != null">
        termid,
      </if>
      <if test="termname != null">
        termname,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="famPhone != null">
        famPhone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stunumber != null">
        #{stunumber,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="stuid != null">
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="stuname != null">
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="isleader != null">
        #{isleader,jdbcType=VARCHAR},
      </if>
      <if test="crttime != null">
        #{crttime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="termid != null">
        #{termid,jdbcType=INTEGER},
      </if>
      <if test="termname != null">
        #{termname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="famPhone != null">
        #{famPhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zrtjoa.entity.Roster">
    update roster
    <set>
      <if test="birthdate != null">
        birthdate = #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stunumber != null">
        stunumber = #{stunumber,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        classid = #{classid,jdbcType=INTEGER},
      </if>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="stuid != null">
        stuid = #{stuid,jdbcType=INTEGER},
      </if>
      <if test="stuname != null">
        stuname = #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="isleader != null">
        isleader = #{isleader,jdbcType=VARCHAR},
      </if>
      <if test="crttime != null">
        crttime = #{crttime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="termid != null">
        termid = #{termid,jdbcType=INTEGER},
      </if>
      <if test="termname != null">
        termname = #{termname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="famPhone != null">
        famPhone = #{famPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zrtjoa.entity.Roster">
    update roster
    set isleader = #{isleader,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryRosterInfoByClsIdAndStuId" resultType="java.util.Map" parameterType="com.zrtjoa.entity.StudentEnter">
    select
    <include refid="Base_Column_List"/>
    from roster where stuid = #{stuid} and classid in (""
    <foreach collection="classids" item="classid" index="index">
      ,#{classid}
    </foreach>
    )  ;
  </select>
  <select id="getList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from roster where classid = #{classid}
    order by age desc
  </select>
  <select id="selectByIsleader" resultMap="BaseResultMap">
    select *
    from roster where isleader = #{0}
    and classid = #{1};
</select>

  <delete id="deleteByClassIdAndStuId" parameterType="java.util.Map">
    delete from roster where  stunumber in (""
    <foreach collection="list" item="stuno" index="index">
      ,#{stuno}
    </foreach>
    )  ;
  </delete>

  <delete id="delByStuNo" parameterType="string">
    delete from roster where stunumber = #{value}
  </delete>

  <delete id="delByStuId" parameterType="int">
    delete from roster where stuid = #{value}
  </delete>

  <select id="queryRosterByClassIdAndTerm" parameterType="map"
          resultType="com.zrtjoa.entity.Roster">
    select r.id, r.birthdate, r.stunumber, r.classid, r.stuid,
           r.stuname, r.age, r.isleader, r.crttime, r.status,r.classid,r.classname,
           r.termid, r.termname,r.famPhone ,s.sex,substring(s.sfzh,6,8),s.phone
    from roster r left join student s on r.stuid = s.id
    where r.termid = #{termId} and r.classid = #{classId}
  </select>

    <!--学院总人数-->
    <select id="queryTotalStudentWithYear" resultType="map" parameterType="map">
      select
        count(distinct stuid) total ,
        termname
      from roster r LEFT JOIN classes c on r.classid = c.id
      where 1=1
      <if test="classId != null">
        and classid = #{classId}
      </if>
      <if test="majorId != null">
        and c.majorid = #{majorId}
      </if>
      <if test="startTermId != null">
        and termid >= #{startTermId}
      </if>
      <if test="endTermId != null">
        and termid &lt;= #{endTermId}
      </if>
      group by termid
    </select>

  <!--查询新生率-->
  <select id="queryNewStuRate" resultType="map" parameterType="map">
    SELECT
      IFNULL( count( 1 ) / ( SELECT count( stuid ) FROM studententer WHERE term_id = t2.termid ), 0 ) newRate,
      t2.termname
    FROM
      ( SELECT t1.* FROM ( SELECT * FROM roster ORDER BY crttime ) t1 GROUP BY t1.stuid ) t2
      LEFT JOIN classes c ON t2.classid = c.id
    where 1=1
      <if test="classId != null">
        and t2.classid = #{classId}
      </if>
      <if test="majorId != null">
        and c.majorid = #{majorId}
      </if>
      <if test="startTermId != null">
        and t2.termid >= #{startTermId}
      </if>
      <if test="endTermId != null">
        and t2.termid &lt;= #{endTermId}
      </if>
    GROUP BY
      t2.termid

  </select>

  <!--学生年龄比率-->
  <select id="queryStuAgeRate" resultType="map" parameterType="map">
    SELECT
      count( 1 ) stuNumbers,
      (
      CASE
        WHEN t.age &lt; 40 THEN
        '49-'
        WHEN t.age &lt; 50 THEN
        '59-60'
        WHEN t.age &lt; 60 THEN
        '69-70'
        WHEN t.age &lt; 70 THEN
        '79-80' ELSE '80+'
        END
        ) ageInterval
      FROM
        (
          SELECT
            r.id,
            stuid,
            birthdate,
            YEAR ( from_days( datediff( now( ), birthdate ) ) ) age
          FROM
            roster r left join classes c on r.classid = c.id
          WHERE
            termid = ( SELECT max( termid ) FROM roster )
            <if test = "classId != null" >
           	  AND classid >= #{classId}
          	</if >
            <if test = "majorId != null" >
              AND c.majorid >= #{majorId}
            </if >
        ) t
    GROUP BY
      ageInterval
  </select>

  <!--学生性别比率-->
  <select id="queryStuSexRate" resultType="map" parameterType="map">
    SELECT
      t.termid,
      count( CASE t.sex WHEN '女' THEN '女' END )/COUNT(t.sex) female,
      count( CASE t.sex WHEN '男' THEN '男' END )/COUNT(t.sex) male
    FROM
    (
      SELECT
        s.sex,
        r.termid
      FROM
        roster r
      LEFT JOIN student s ON r.stuid = s.id
      LEFT JOIN classes c ON r.classid = c.id
      WHERE
        termid = ( SELECT max( termid ) FROM roster )
        <if test="classId != null">
          and r.classid = #{classId}
        </if>
        <if test="majorId != null">
          and c.majorid = #{majorId}
        </if>
      GROUP BY
        r.stuid
      ) t
  </select>

  <!--学生性别比率-->
  <select id="queryStuSexRates" resultType="map" parameterType="map">
    SELECT
           sum( CASE WHEN sex = '男' THEN 1 ELSE 0 END ) * 1.0 / count( * ) male,
           sum( CASE WHEN sex = '女' THEN 1 ELSE 0 END ) * 1.0 / count( * ) female
    FROM
         student;
  </select>

  <!--学生流失率-->
  <select id="queryStuLossRate" resultType="map" parameterType="map">
      SELECT
             t2.termname,
             t1.num / t2.total rate
      FROM
           ( SELECT count( 1 ) num, termname, termid FROM specialmanager WHERE types IN ( 2, 3 ) GROUP BY termid ) t1,
           ( SELECT count( DISTINCT stuid ) total, termname, termid FROM roster GROUP BY termid ) t2
      WHERE
            1=1
      <if test="startTermId != null">
          and t1.termid >= #{startTermId}
          and t2.termid >= #{startTermId}
      </if>
      <if test="endTermId != null">
          and t1.termid &lt;= #{endTermId}
          and t2.termid &lt;= #{endTermId}
      </if>
  </select>
    <select id="queryStuNumByStuIdAndClsIds" resultType="java.lang.String" parameterType="map">
      select stunumber from roster where stuid = #{stuId} and classid in (""
      <foreach collection="clsIds" item="id" index="index">
        ,#{id}
      </foreach>
      )  ;
    </select>
  <select id="queryStuNo" resultType="java.lang.String">
    select stunumber from roster
  </select>
</mapper>