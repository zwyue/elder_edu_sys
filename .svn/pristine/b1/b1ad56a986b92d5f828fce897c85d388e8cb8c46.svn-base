package com.zrtjoa.service.impl;

import com.zrtjoa.dao.PowerDao;
import com.zrtjoa.dao.RoleDao;
import com.zrtjoa.entity.Power;
import com.zrtjoa.entity.Role;
import com.zrtjoa.service.PowerService;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Set;

import static com.zrtjoa.constant.SysConstant.Punctuation.COMMA;

/**
 * PowerServiceImpl class
 *
 * @author zwy
 * @date 2018/12/1 10:46
 */
@Service
public class PowerServiceImpl implements PowerService {

    private final static Logger logger = LoggerFactory.getLogger(PowerServiceImpl.class);

    @Autowired
    private PowerDao powerDao ;

    @Autowired
    private RoleDao roleDao ;

    @Override
    public List<Power> queryPowerByPowerIds(List<String> powerIds) {
        logger.info("***********查询权限***********");
        return powerDao.queryPowerByPowerIds(powerIds);
    }

    @Override
    public List<Power> queryPowerList() {
        return powerDao.queryPowerList();
    }

    @Override
    public Integer createNewPower(Power power) {
        return powerDao.insert(power);
    }

    @Override
    public Power queryPowerByPowerName(String loginPower) {
        return powerDao.queryPowerByPowerName(loginPower);
    }

    @Override
    public Integer allocatePower(Integer roleId, Integer powerId) {
        //根据角色id查询角色
        Role role = roleDao.selectByPrimaryKey(roleId);
        //根据权限id查询权限
        Power power = powerDao.selectByPrimaryKey(powerId);
        if(StringUtils.isNotBlank(role.getPowerid())){
            if(role.getPowerid().contains(powerId.toString())){
                return 0 ;
            }else {
                role.setPowerid(role.getPowerid() + COMMA + powerId);
                role.setPowername(role.getPowername() + COMMA + power.getPowername());
            }
        }else {
            role.setPowerid(powerId.toString());
            role.setPowername(power.getPowername());
        }
        return roleDao.updateByPrimaryKeySelective(role);
    }
}
