package com.zrtjoa.controller.archive;

import com.zrtjoa.controller.BaseController;
import com.zrtjoa.entity.Resource;
import com.zrtjoa.entity.Teacher;
import com.zrtjoa.service.ResourceService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpSession;
import java.util.List;

/**
 * ResourceController class
 *
 * @author zwy
 * @date 2018/11/28 15:43
 */
@Controller
@RequestMapping("resource")
public class ResourceController extends BaseController {

    private static final Logger logger = LoggerFactory.getLogger(ResourceController.class) ;

    @Autowired
    private ResourceService resourceService ;

    /**
     * 进入资源建设新增页面
     *
     * @author zwy
     * @date 2018/11/28 15:50
     */
    @RequestMapping(value = "toSave", method = RequestMethod.GET)
    public String toSave(){
        return "archives/resource/resource_add";
    }

    /**
     * 保存资源建设
     *
     * @author zwy
     * @date 2018/11/28 16:10
     */
    @RequestMapping(value = "saveResource",method = RequestMethod.POST)
    @ResponseBody
    public String saveResouce(Resource resource, HttpSession httpSession){
        Teacher teacher = getLoginUser(httpSession);
        resource.setUserid(teacher.getId());
        resource.setUsername(teacher.getTname());
        resourceService.saveResouce(resource);
        return "{ \"msg\":\"success\"}" ;
    }

    /**
     * 获取资源建设列表
     *
     * @author zwy
     * @date 2018/11/28 16:32
     */
    @RequestMapping("list")
    public String list(Model model){
        List<Resource> resources = resourceService.queryResourceList();
        model.addAttribute("list",resources);
        return "archives/resource/resource_list" ;
    }

    /**
     * 档案查询
     *
     * @author zwy
     * @date 2018/11/28 14:09
     */
    @RequestMapping(value = "queryResourceById" ,method = RequestMethod.GET)
    public String queryMemorabilia(Integer id,Model model){
        logger.info("========查询id为{}的资源========",id);
        Resource resource = resourceService.queryResourceById(id);
        model.addAttribute("resource",resource);
        return "archives/resource/resource_update";
    }

    /**
     * 资源建设更新
     *
     * @author zwy
     * @date 2018/11/28 14:09
     */
    @RequestMapping(value = "update" ,method = RequestMethod.POST)
    @ResponseBody
    public String updateResource(Resource resource){
        logger.info("=========资源建设更新=========");
        resourceService.updateResource(resource);
        return "{ \"msg\":\"success\"}" ;
    }

    /**
     * 删除资源建设
     *
     * @author zwy
     * @date 2018/11/28 17:37
     */
    @RequestMapping(value = "delete" ,method = RequestMethod.POST)
    public String deleteMemorabilia(@RequestParam(value = "idList[]") List<Integer> idList){

        logger.info("======删除{}条资源建设======",idList.size());
        resourceService.deleteResouece(idList);

        return "redirect:/resource/list" ;
    }
}
