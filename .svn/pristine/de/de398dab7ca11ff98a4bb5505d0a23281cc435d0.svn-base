<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zrtjoa.dao.ProfessionDao">
  <resultMap id="BaseResultMap" type="com.zrtjoa.entity.Profession">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="majornumber" jdbcType="INTEGER" property="majornumber" />
    <result column="majorname" jdbcType="VARCHAR" property="majorname" />
    <result column="createid" jdbcType="INTEGER" property="createid" />
    <result column="createname" jdbcType="VARCHAR" property="createname" />
    <result column="cateid" jdbcType="INTEGER" property="cateid" />
    <result column="catename" jdbcType="VARCHAR" property="catename" />
    <result column="crttime" jdbcType="TIMESTAMP" property="crttime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, majornumber, majorname, createid, createname,cateid, catename, crttime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from profession
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from profession
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zrtjoa.entity.Profession">
    insert into profession (id, majornumber, majorname, 
      createid, createname,cateid, catename, crttime
      )
    values (#{id,jdbcType=INTEGER}, #{majornumber,jdbcType=INTEGER}, #{majorname,jdbcType=VARCHAR}, 
      #{createid,jdbcType=INTEGER}, #{createname,jdbcType=VARCHAR}, #{cateid,jdbcType=INTEGER},
       #{catename,jdbcType=VARCHAR}, now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zrtjoa.entity.Profession">
    insert into profession
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="majornumber != null">
        majornumber,
      </if>
      <if test="majorname != null">
        majorname,
      </if>
      <if test="createid != null">
        createid,
      </if>
      <if test="createname != null">
        createname,
      </if>
      <if test="cateid != null">
        cateid,
      </if>
      <if test="catename != null">
        catename,
      </if>
      <if test="crttime != null">
        crttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="majornumber != null">
        #{majornumber,jdbcType=INTEGER},
      </if>
      <if test="majorname != null">
        #{majorname,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="createname != null">
        #{createname,jdbcType=VARCHAR},
      </if>
      <if test="cateid != null">
        #{cateid,jdbcType=INTEGER},
      </if>
      <if test="catename != null">
        #{catename,jdbcType=VARCHAR},
      </if>
      <if test="crttime != null">
        #{crttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zrtjoa.entity.Profession">
    update profession
    <set>
      <if test="majornumber != null">
        majornumber = #{majornumber,jdbcType=INTEGER},
      </if>
      <if test="majorname != null">
        majorname = #{majorname,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        createid = #{createid,jdbcType=INTEGER},
      </if>
      <if test="createname != null">
        createname = #{createname,jdbcType=VARCHAR},
      </if>
      <if test="cateid != null">
        cateid = #{cateid,jdbcType=INTEGER},
      </if>
      <if test="catename != null">
        catename = #{catename,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zrtjoa.entity.Profession">
    update profession
    set majornumber = #{majornumber,jdbcType=INTEGER},
      majorname = #{majorname,jdbcType=VARCHAR},
      createid = #{createid,jdbcType=INTEGER},
      createname = #{createname,jdbcType=VARCHAR},
      cateid = #{cateid,jdbcType=INTEGER},
      catename = #{catename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>