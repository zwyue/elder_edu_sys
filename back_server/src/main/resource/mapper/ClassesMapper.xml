<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhu.base.dao.ClassesDao">
  <resultMap id="BaseResultMap" type="com.zhu.base.entity.Classes">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
    <result column="plansize" jdbcType="INTEGER" property="plansize" />
    <result column="actualsize" jdbcType="INTEGER" property="actualsize" />
    <result column="majorid" jdbcType="INTEGER" property="majorid" />
    <result column="majorname" jdbcType="VARCHAR" property="majorname" />
    <result column="headmaster" jdbcType="INTEGER" property="headmaster" />
    <result column="headmastername" jdbcType="VARCHAR" property="headmastername" />
    <result column="monitor" jdbcType="VARCHAR" property="monitor" />
    <result column="studyer" jdbcType="VARCHAR" property="studyer" />
    <result column="safer" jdbcType="VARCHAR" property="safer" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="tname" jdbcType="VARCHAR" property="tname" />
    <result column="cateid" jdbcType="INTEGER" property="cateid" />
    <result column="catename" jdbcType="VARCHAR" property="catename" />
    <result column="crttime" jdbcType="TIMESTAMP" property="crttime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, number, classname, plansize, actualsize, majorid, majorname, headmaster, headmastername, 
    monitor, studyer, safer, tid, tname, cateid, catename,
    DATE_FORMAT(crttime,'%Y-%m-%d %H:%i:%S') crttime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Classes">
    insert into classes (id, number, classname, 
      plansize, actualsize, majorid, 
      majorname, headmaster, headmastername, 
      monitor, studyer, safer, 
      tid, tname, cateid, catename, crttime
      )
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR},
      #{plansize,jdbcType=INTEGER}, #{actualsize,jdbcType=INTEGER}, #{majorid,jdbcType=INTEGER}, 
      #{majorname,jdbcType=VARCHAR}, #{headmaster,jdbcType=INTEGER}, #{headmastername,jdbcType=VARCHAR}, 
      #{monitor,jdbcType=VARCHAR}, #{studyer,jdbcType=VARCHAR}, #{safer,jdbcType=VARCHAR}, 
      #{tid,jdbcType=INTEGER}, #{tname,jdbcType=VARCHAR}, #{cateid,jdbcType=INTEGER},
       #{catename,jdbcType=VARCHAR}, now()
      )
  </insert>
  <insert id="insertSelective" parameterType="Classes">
    insert into classes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        number,
      </if>
      <if test="classname != null">
        classname,
      </if>
      <if test="plansize != null">
        plansize,
      </if>
      <if test="actualsize != null">
        actualsize,
      </if>
      <if test="majorid != null">
        majorid,
      </if>
      <if test="majorname != null">
        majorname,
      </if>
      <if test="headmaster != null">
        headmaster,
      </if>
      <if test="headmastername != null">
        headmastername,
      </if>
      <if test="monitor != null">
        monitor,
      </if>
      <if test="studyer != null">
        studyer,
      </if>
      <if test="safer != null">
        safer,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="tname != null">
        tname,
      </if>
      <if test="cateid != null">
        cateid,
      </if>
      <if test="catename != null">
        catename,
      </if>
        crttime,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="plansize != null">
        #{plansize,jdbcType=INTEGER},
      </if>
      <if test="actualsize != null">
        #{actualsize,jdbcType=INTEGER},
      </if>
      <if test="majorid != null">
        #{majorid,jdbcType=INTEGER},
      </if>
      <if test="majorname != null">
        #{majorname,jdbcType=VARCHAR},
      </if>
      <if test="headmaster != null">
        #{headmaster,jdbcType=INTEGER},
      </if>
      <if test="headmastername != null">
        #{headmastername,jdbcType=VARCHAR},
      </if>
      <if test="monitor != null">
        #{monitor,jdbcType=VARCHAR},
      </if>
      <if test="studyer != null">
        #{studyer,jdbcType=VARCHAR},
      </if>
      <if test="safer != null">
        #{safer,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="tname != null">
        #{tname,jdbcType=VARCHAR},
      </if>
      <if test="cateid != null">
        #{cateid,jdbcType=INTEGER},
      </if>
      <if test="catename != null">
        #{catename,jdbcType=VARCHAR},
      </if>
      now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhu.base.entity.Classes">
    update classes
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="plansize != null">
        plansize = #{plansize,jdbcType=INTEGER},
      </if>
      <if test="actualsize != null">
        actualsize = #{actualsize,jdbcType=INTEGER},
      </if>
      <if test="majorid != null">
        majorid = #{majorid,jdbcType=INTEGER},
      </if>
      <if test="majorname != null">
        majorname = #{majorname,jdbcType=VARCHAR},
      </if>
      <if test="headmaster != null">
        headmaster = #{headmaster,jdbcType=INTEGER},
      </if>
      <if test="headmastername != null">
        headmastername = #{headmastername,jdbcType=VARCHAR},
      </if>
      <if test="monitor != null">
        monitor = #{monitor,jdbcType=VARCHAR},
      </if>
      <if test="studyer != null">
        studyer = #{studyer,jdbcType=VARCHAR},
      </if>
      <if test="safer != null">
        safer = #{safer,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="tname != null">
        tname = #{tname,jdbcType=VARCHAR},
      </if>
      <if test="cateid != null">
        cateid = #{cateid,jdbcType=INTEGER},
      </if>
      <if test="catename != null">
        catename = #{catename,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhu.base.entity.Classes">
    update classes
    set number = #{number,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR},
      plansize = #{plansize,jdbcType=INTEGER},
      actualsize = #{actualsize,jdbcType=INTEGER},
      majorid = #{majorid,jdbcType=INTEGER},
      majorname = #{majorname,jdbcType=VARCHAR},
      headmaster = #{headmaster,jdbcType=INTEGER},
      headmastername = #{headmastername,jdbcType=VARCHAR},
      monitor = #{monitor,jdbcType=VARCHAR},
      studyer = #{studyer,jdbcType=VARCHAR},
      safer = #{safer,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=INTEGER},
      tname = #{tname,jdbcType=VARCHAR},
      cateid = #{cateid,jdbcType=INTEGER},
      catename = #{catename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getList" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM classes order by crttime desc
  </select>
  <select id="byNameList" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from classes
    where classname LIKE concat('%',#{name},'%')
  </select>
  <select id="getCList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from classes
    where majorid = #{majorid,jdbcType=INTEGER}
  </select>
  <select id="getTeaClasslist" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from classes
    where tid = #{tid,jdbcType=INTEGER}
  </select>
  <select id="getTeaClasslists" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from classes
    where headmaster = #{headmaster,jdbcType=INTEGER}
  </select>
  <select id="queryClasses" resultType="com.zhu.base.entity.Classes" parameterType="com.zhu.base.entity.Classes">
    select c.id, c.number, c.classname, c.plansize, c.actualsize, c.majorid, c.majorname, c.headmaster, c.headmastername,
           c.monitor, c.studyer, c.safer, c.tid, c.tname, c.cateid, c.catename, c.crttime ,t.phone
    from classes c left join teacher t on c.tid =  t.id WHERE 1=1
                                                          <if test="classname!=null and classname!=''">
                                                            and c.classname LIKE concat('%',#{classname},'%')
                                                          </if>
  </select>

    <!--根据分类id和专业id查询班级-->
    <select id="queryClassesByCateIdAndPrfId" resultType="com.zhu.base.entity.Classes" parameterType="map">
      SELECT
              *
      FROM
           classes
      WHERE
              1 = 1
        <if test="prfId!=null">
          AND majorid = #{prfId}
        </if>
        <if test="cateId!=null">
          AND cateid = #{cateId}
        </if>
    </select>

  <select id="queryClsByIds" resultType="com.zhu.base.entity.Classes" parameterType="string">
    select * from classes where id in (""
    <foreach collection="list" item="id" index="index">
      ,#{id}
    </foreach>
    )  ;

  </select>

  <select id="getClsByPrfIds" resultType="com.zhu.base.entity.Classes">
    select * from classes where majorid in (""
    <foreach collection="list" item="prfId" index="index">
     , #{prfId}
    </foreach>
    )
  </select>
</mapper>